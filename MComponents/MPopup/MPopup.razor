@inject IJSRuntime JSRuntime

<div @ref="mPopupElement" class="@CssClass" tabindex="-1" @onblur=Hide @onclick="Hide">

    <div class="m-popup-target" @onclick="Toggle" @onclick:preventDefault @onclick:stopPropagation>
        @Target
    </div>

    @if(mPopupVisible)
    {    
        JSRuntime.InvokeVoidAsync("mcomponents.focusElement", mPopupElement);
        <div class="m-popup-align">
            <diV class="m-popup-content">
                @PopupContent
            </div>
        </div>
    }
    
</div>

@code {

    [Parameter]
    public RenderFragment Target { get; set; }

    [Parameter]
    public RenderFragment PopupContent { get; set; }

    [Parameter]
    public string CssClass { get; set; } = "m-popup";

    protected ElementReference mPopupElement;
    protected bool mPopupVisible;

    public void Toggle()
    {
        mPopupVisible = !mPopupVisible;
    }

    public void Show()
    {
        mPopupVisible = true;
    }

    public void Hide()
    {
      //  mPopupVisible = false;        
    }

}
