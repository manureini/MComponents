@typeparam T

<div class="m-cards-container" style="grid-template-columns: @mTemplateColumnsStyle">
    @if (Values != null)
    {
        @foreach (var value in Values)
        {
            <div class="m-card @(OnClick.HasDelegate ? "m-clickable" : string.Empty)" @onclick="async () => await OnClick.InvokeAsync(value)">
                @Template?.Invoke(value)
            </div>
        }
    }
</div>

@code {
    protected string mTemplateColumnsStyle;

    [Parameter]
    public IEnumerable<T> Values { get; set; }

    [Parameter]
    public int Columns { get; set; }

    [Parameter]
    public RenderFragment<T> Template { get; set; }

    [Parameter]
    public EventCallback<T> OnClick { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        mTemplateColumnsStyle = string.Empty;

        for (int i = 0; i < Columns; i++)
        {
            mTemplateColumnsStyle += $"{(int)(100.0/Columns)}% ";
        }

        mTemplateColumnsStyle = mTemplateColumnsStyle.Trim();
    }

}
