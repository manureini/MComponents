@using MComponents.Resources;


<div class="m-query-builder-row m-query-builder-group">

    <div class="m-query-builder-group-header">

        <div class="m-query-builder-connector">
            <div class="m-query-builder-connector-top"></div>
            <div class="m-query-builder-connector-bottom"></div>
        </div>

        <div class="m-query-builder-group-header-content">

            <button type="button" class="m-btn" disabled="@(RuleGroup.Conditions == null || RuleGroup.Conditions.Count <= 1 || RuleGroup.Operator == MQueryBuilderRuleGroupOperator.And)" @onclick="() => OnOperatorChanged(MQueryBuilderRuleGroupOperator.And)">@L[nameof(MComponentsLocalization.And)]</button>
            <button type="button" class="m-btn" disabled="@(RuleGroup.Conditions == null || RuleGroup.Conditions.Count <= 1 || RuleGroup.Operator == MQueryBuilderRuleGroupOperator.Or)" @onclick="() => OnOperatorChanged(MQueryBuilderRuleGroupOperator.Or)">@L[nameof(MComponentsLocalization.Or)]</button>

            <button type="button" class="m-btn" @onclick="AddNewCondition">@L[nameof(MComponentsLocalization.Add)]</button>
            <button type="button" class="m-btn" @onclick="AddNewRuleGroup">@L[nameof(MComponentsLocalization.Add)]</button>

            @if (!IsRootGroup)
            {
                <button type="button" class="m-btn m-btn-secondary m-btn-icon m-btn-sm" @onclick="() => QueryBuilder.RemoveRuleGroup(RuleGroup)"><i class="fa-solid fa-trash-can m-grid-action-icon"></i></button>
            }

        </div>

    </div>

    <div class="m-query-builder-group-container">

        @if (RuleGroup.Conditions.Count > 0 || (RuleGroup.ChildGroups != null && RuleGroup.ChildGroups.Count > 0))
        {
            <div class="m-query-builder-container-connector">
            </div>
        }

        <div class="m-query-builder-group-content @(RuleGroup.ChildGroups != null && RuleGroup.ChildGroups.Count > 0 ? "has-group" : string.Empty)">

            @foreach (var rule in RuleGroup.Conditions)
            {
                <MQueryBuilderConditionRow Condition="rule" QueryBuilder="QueryBuilder" />
            }

            @if (RuleGroup.ChildGroups != null)
            {
                @foreach (var ruleGroup in RuleGroup.ChildGroups)
                {
                    <MQueryBuilderGroup RuleGroup="ruleGroup" QueryBuilder="QueryBuilder" />
                }
            }

        </div>

    </div>

</div>


@code {

    [Parameter]
    public IMQueryBuilder QueryBuilder { get; set; }

    [Parameter]
    public MQueryBuilderRuleGroup RuleGroup { get; set; }

    [Parameter]
    public bool IsRootGroup { get; set; }

    public async Task AddNewCondition()
    {
        RuleGroup.Conditions.Add(new MQueryBuilderJsonCondition());

        await QueryBuilder.InvokeRulesChanged();
    }

    public async Task AddNewRuleGroup()
    {
        if (RuleGroup.ChildGroups == null)
        {
            RuleGroup.ChildGroups = new();
        }

        RuleGroup.ChildGroups.Add(new MQueryBuilderRuleGroup());

        await QueryBuilder.InvokeRulesChanged();
    }

    public async Task OnOperatorChanged(MQueryBuilderRuleGroupOperator pOperator)
    {
        RuleGroup.Operator = pOperator;
        await QueryBuilder.InvokeRulesChanged();
    }

}
