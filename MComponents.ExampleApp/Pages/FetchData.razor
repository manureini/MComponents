@page "/fetchdata"

@using MComponents.ExampleApp.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MGrid DataSource="forecasts"
           EnableAdding="true"
           EnableDeleting="true"
           EnableEditing="true"
           EnableExport="true"
           EnableFilterRow="true"
           EnableUserSorting="true"
           HtmlTableClass="m-grid m-grid-striped m-grid-bordered m-grid-hover m-grid-sticky">
        <MGridColumns>
            <MGridColumn Property="@nameof(WeatherForecast.Date)" StringFormat="{0:dd.MM.yyyy}" />
            <MGridColumn Property="@nameof(WeatherForecast.TemperatureC)" />
            <MGridColumn Property="@nameof(WeatherForecast.TemperatureF)" />
            <MGridColumn Property="@nameof(WeatherForecast.ForcastType)" />
            <MGridColumn Property="@nameof(WeatherForecast.IsGoodWeather)" />
            <MGridColumn Property="@nameof(WeatherForecast.Summary)" />
            <MGridColumn Property="@nameof(WeatherForecast.TypeOfClouds)" />

            <MGridComplexPropertyColumn T="WeatherForecast" Identifier="WeatherStation" TProperty="WeatherStation" Property=@nameof(WeatherForecast.WeatherStation)>
                <FormTemplate Context="templContext">
                    <MSelect T="WeatherStation"
                             id=@templContext.InputId
                             class="form-control"
                             Property="@nameof(WeatherStation.Name)"
                             Options="ForecastService.AllWeatherStations"
                             Value="templContext.Value"
                             ValueChanged="templContext.ValueChanged"
                             ValueExpression="templContext.ValueExpression" />
                </FormTemplate>
                <CellTemplate Context="templContext">
                    @templContext?.WeatherStation?.Name
                </CellTemplate>
            </MGridComplexPropertyColumn>

            <MGridActionColumn T="WeatherForecast" />
        </MGridColumns>

        <MGridPager />

    </MGrid>


    <MFormContainer>
        <MForm Model="forecasts.FirstOrDefault()" />
    </MFormContainer>

}

@code {
    private List<WeatherForecast> forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = (await ForecastService.GetForecastAsync(DateTime.Now)).ToList();

        foreach (var entry in forecasts)
        {
            /*
            entry.WeatherStation = new WeatherStation()
            {
                Id = entry.WeatherStation.Id,
                Name = entry.WeatherStation.Name
            };
            */
        }
    }
}
